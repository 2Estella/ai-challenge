<!-- ---
description: "Agent Guardrails: autonomous feature work (safe-by-default)"
globs: ["**/*"]
alwaysApply: true
---

# Agent Guardrails

## Scope & Safety
- Edit files **only inside** `/src`, `/api`, `/stores`, `/styles`, `/tests`, and config files listed below.
- Do **NOT** change build/tooling beyond: `package.json`, `tsconfig.json`, `vitest.config.*`, `playwright.config.*`, `.eslintrc*`, `postcss.config.*`.
- If API가 없음 → **msw** 핸들러를 생성하고 테스트에서 사용.
- 데이터/시크릿은 생성하지 말고 `.env.example`만 변경 (실제 `.env` 손대지 말 것).

## Method (Plan → Implement → Verify → Summarize)
1) **Plan**: 변경 파일 목록, 생성/수정 포인트, 영향 범위를 불릿으로 적어라.
2) **Implement**: 작은 커밋 단위로 진행. 각 커밋은 하나의 목적만 가진다.
3) **Verify**: `npm run typecheck && npm run lint && npm test` 실행. 실패 시 자기수정 루프 2회.
4) **Summarize**: 변경 요약, 남은 TODO, 후속 이슈 제안.

## Code Standards (React + TS + Zustand + SCSS)
- 함수형 컴포넌트. props 인터페이스 상단 정의. 파생 상태는 `useMemo`.
- 전역 상태는 Zustand store slice로만. 컴포넌트에서 직접 set 금지, **actions** 호출.
- SCSS 모듈 + BEM. inline style 금지.
- Strict TS. `any` 금지. 명시적 리턴 타입. 에러는 typed surface로.
- 한국어 사용자 인터페이스 고려 (i18n, 한글 폰트, RTL 지원 등)

## Domain-Specific Rules (JobKorea)
- 채용 관련 데이터는 민감정보 처리 규칙 준수
- 사용자 프로필, 기업정보 등 개인정보 보호 고려
- 검색 기능은 성능 최적화 우선 (디바운싱, 캐싱)
- 모바일 반응형 디자인 필수
- 채용 정보의 정확성과 최신성 보장

## Error Handling
- API 에러는 사용자 친화적 메시지로 변환
- 네트워크 오류 시 재시도 로직 구현
- 로딩 상태와 에러 상태 명확히 구분
- 에러 로깅 및 모니터링 설정
- 사용자에게 적절한 피드백 제공

## Accessibility
- ARIA 라벨 및 역할 적절히 설정
- 키보드 네비게이션 지원
- 색상 대비 WCAG 2.1 AA 기준 준수
- 스크린 리더 호환성 확인
- 포커스 관리 (모달, 메뉴 등)

## Performance
- React.memo, useCallback, useMemo 적절히 활용
- 이미지 최적화 (WebP, lazy loading)
- 번들 크기 최적화 (코드 스플리팅)
- Core Web Vitals 지표 모니터링
- 검색 성능 최적화 (디바운싱, 가상 스크롤)

## Tests First-ish (R-G-R)
- 가능하면 **간단한 테스트를 먼저 추가**하고 구현 (red → green → refactor).
- E2E가 필요하면 **Playwright** 테스트도 생성/수정.
- 컴포넌트 테스트는 사용자 행동 중심으로 작성
- API 테스트는 MSW 핸들러 활용

## Commit/PR
- Commit msg: `feat(scope): summary`, `fix(scope): summary`, `test(scope): ...`
- PR description에 Plan/Changes/Tests/Impact를 템플릿으로 채워라.
- 한국어 커밋 메시지 허용 (팀 규칙에 따라)

## Security & Privacy
- 사용자 입력 검증 및 sanitization
- XSS, CSRF 방어 로직 구현
- 개인정보 암호화 및 안전한 전송
- 세션 관리 및 인증 토큰 보안
- GDPR, 개인정보보호법 준수

## When unsure
- 명확한 단일 질문을 1개 하고, 60초 내 합리적 기본값으로 진행.
- JobKorea 도메인 지식이 필요한 경우 사용자에게 확인
- 성능이나 보안 관련 의문사항은 보수적으로 접근 -->
